#!/usr/bin/env bash -eu

pushd `dirname $0` > /dev/null
SCRIPT_PATH=`pwd`
popd > /dev/null

pushd $HOME > /dev/null

backup_existing_file() {
  if [ ! -e $1 ] ; then
    return 0
  fi

  if [ ! -e "$1.bak" ] ; then
    mv $1 $1.bak
    echo "A backup [$1.bak] is created."
    return 0
  fi

  i=1

  while [ -e "$1.bak.$i" ] ; do
    let i=$i+1
  done

  mv $1 $1.bak.$i
  echo "A backup [$1.bak.$i] is created."
  return 0
}

backup_existing_file $HOME/.vimrc
backup_existing_file $HOME/.vim

ln -s $SCRIPT_PATH/.vim $HOME/.vim
echo "A symbolic link [$HOME/.vim] is created."
ln -s $SCRIPT_PATH/.vimrc $HOME/.vimrc
echo "A symbolic link [$HOME/.vimrc] is created."
cp $SCRIPT_PATH/.vimrc.preset.sample $HOME/.vimrc.preset
echo "A preset file [$HOME/.vimrc.preset] is copied."

if hash nvim 2>/dev/null; then
  XDG_CONFIG_HOME=${XDG_CONFIG_HOME:=$HOME/.config}

  if [ ! -d "$XDG_CONFIG_HOME" ] ; then
    mkdir -p $XDG_CONFIG_HOME
    echo "[$XDG_CONFIG_HOME] is created."
  fi

  backup_existing_file $XDG_CONFIG_HOME/nvim/init.vim
  backup_existing_file $XDG_CONFIG_HOME/nvim

  ln -s $SCRIPT_PATH/.vim $XDG_CONFIG_HOME/nvim
  echo "A symbolic link [$XDG_CONFIG_HOME/nvim] is created."

  backup_existing_file $XDG_CONFIG_HOME/nvim/init.vim

  ln -s $SCRIPT_PATH/.vimrc $XDG_CONFIG_HOME/nvim/init.vim
  echo "A symbolic link [$XDG_CONFIG_HOME/nvim/init.vim] is created."
fi

popd > /dev/null
